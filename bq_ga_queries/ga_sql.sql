SELECT
p.key,
p.value.string_value

--p.value.string
-- cpf
-- screen_name
-- data
-- tipo_usuario

FROM `eai-datalake-prd.analytics_418484798.events_20240717`, UNNEST(event_params) as p
WHERE event_name = "hero_interaction"
  AND REGEXP_CONTAINS(p.key, "detail|option|fluxo|screen$")
GROUP BY 1,2,3

--hero_conversion
--hero_erro
--hero_interaction
--hero_userdata
--hero_visualization

/* This query is generated by ga4Sql.com */
SELECT
  page_location,
  COUNT(DISTINCT session_id) AS sessions,
  SUM(screen_page_views) AS screen_page_views
FROM
  (
    SELECT
      (
        SELECT
          value.string_value
        FROM
          UNNEST (event_params)
        WHERE
          event_name = 'page_view'
          AND key = 'page_location'
      ) AS page_location,
      CONCAT(
        user_pseudo_id,
        (
          SELECT
            value.int_value
          FROM
            UNNEST (event_params)
          WHERE
            key = 'ga_session_id'
        )
      ) AS session_id,
      COUNT(
        CASE
          WHEN event_name = 'page_view' THEN 1
        END
      ) AS screen_page_views
    FROM
      `table_20240101*`
    WHERE
      _TABLE_SUFFIX BETWEEN FORMAT_DATE(
        '%Y%m%d',
        DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      ) AND FORMAT_DATE(
        '%Y%m%d',
        DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
      )
    GROUP BY
      page_location,
      session_id
  )
GROUP BY
  page_location
HAVING
  screen_page_views LIKE '%hero%'


SELECT
p.value.string_value,
-- COUNT(CASE WHEN REGEXP_CONTAINS(p.key, "screen$") THEN 1 END ) AS screen_views_duplicated
-- cpf
-- data
-- tipo_usuario

FROM `eai-datalake-prd.analytics_418484798.events_20240717`, UNNEST(event_params) as p
WHERE event_name = "hero_interaction"
  AND REGEXP_CONTAINS(p.key, "screen$")
GROUP BY 1

--hero_conversion
--hero_erro
--hero_interaction
--hero_userdata
--hero_visualization


SELECT
p.key,
--p.value.string_value,
--p.value.int_value,
user_id,
user_pseudo_id,

--user_properties.key
-- app_info.version
-- geo.region
-- geo.city
-- device.operating_system
-- traffic_source.source

-- COUNT(CASE WHEN REGEXP_CONTAINS(p.key, "screen$") THEN 1 END ) AS screen_views_duplicated
-- cpf
-- data
-- tipo_usuario

FROM `eai-datalake-prd.analytics_418484798.events_20240717`, UNNEST(event_params) as p
WHERE event_name = "hero_interaction"
  AND NOT REGEXP_CONTAINS(p.key, "ga_session_id")
GROUP BY ALL


SELECT
--event_date,
event_timestamp,
event_name,
p.key,
user_pseudo_id,
CASE WHEN REGEXP_CONTAINS(event_name, "screen_view") AND REGEXP_CONTAINS(p.key, "screen$")  THEN p.value.string_value END AS tela_visualizada,
CASE WHEN REGEXP_CONTAINS(event_name, "hero_userdata") AND REGEXP_CONTAINS(p.key, "screen$")  THEN p.value.string_value END AS tela_userdata,
CASE WHEN REGEXP_CONTAINS(event_name, "hero_userdata") AND REGEXP_CONTAINS(p.key, "user_type") THEN p.value.string_value END AS tipo_usuario,
CASE WHEN REGEXP_CONTAINS(event_name, "hero_userdata") AND REGEXP_CONTAINS(p.key, "user_id") THEN p.value.string_value END AS hash_cpf,

-- app_info.version
-- geo.region
-- geo.city
-- device.operating_system
-- traffic_source.source


FROM `eai-datalake-prd.analytics_418484798.events_20240717`, UNNEST(event_params) as p
WHERE user_pseudo_id = "4FB627689F2B45B68BEE56E60D9D7B5D" 
  -- AND event_name = "hero_userdata"
  --AND REGEXP_CONTAINS(p.key, "screen$")
  --AND REGEXP_CONTAINS(p.key, "detail|option|fluxo")
GROUP BY ALL


-- query principal ---------------
WITH Q1 AS (
SELECT
PARSE_DATE('%Y%m%d', event_date) AS data,
user_pseudo_id,
CASE WHEN REGEXP_CONTAINS(event_name, "screen_view") AND REGEXP_CONTAINS(p.key, "firebase_screen$")  THEN p.value.string_value END AS tela,
CASE WHEN REGEXP_CONTAINS(event_name, "hero_userdata") AND REGEXP_CONTAINS(p.key, "user_type") THEN p.value.string_value END AS tipo_usuario,
CASE WHEN REGEXP_CONTAINS(event_name, "hero_userdata") AND REGEXP_CONTAINS(p.key, "user_id") THEN p.value.string_value END AS hash_cpf,
app_info.version AS app_version,
device.operating_system AS sistema_operacional,

FROM `eai-datalake-prd.analytics_418484798.events_202*`, UNNEST(event_params) as p
GROUP BY ALL
)

SELECT 
data,
user_pseudo_id,
tela,
IFNULL(LAST_VALUE(hash_cpf) OVER (PARTITION BY user_pseudo_id ORDER BY hash_cpf ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),"nao_identificado") AS hash_cpf,
IFNULL(LAST_VALUE(tipo_usuario) OVER (PARTITION BY user_pseudo_id ORDER BY tipo_usuario ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),"nao_identificado") AS tipo_usuario,
app_version,
sistema_operacional
FROM Q1
QUALIFY tela IS NOT NULL AND REGEXP_CONTAINS(tela, "onboarding")